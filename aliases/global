#!/usr/bin/zsh
#autoload -U compinit
#compinit


CONFIG_PATH="/home/kyle/Documents/config"
DISTRO_ID="$(cat /etc/*-release | grep 'DISTRIB_ID' | cut -d '=' -f2)"
UBUNTU_DISK_PARTITION="/dev/nvme0n1p4"
MANJARO_DISK_PARTITION="/dev/nvme0n1p2"
FOLDER_HIDDEN="/home/kyle/.other"
FOLDER_SHOWN="/home/kyle/other"
EMAIL="kylegough98@gmail.com"
GPG_EMAIL="${EMAIL}"


# Clipboard.
alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'

# Current Projects
alias sudoku='cd ~/Documents/sudoku'
alias lucidlab='cd ~/Documents/lucidlab'
alias portfolio='cd /srv/http'

# Directories.
alias .='pwd'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias /='cd /'
alias ~='cd ~'
alias mkdir='mkdir -pv'
mkcd() { mkdir -p $1; cd $1 }
alias mv='mv -i'
alias cp='cp -i'
alias ln='ln -i'
alias untar='tar -xvf'
alias cl='clear && ls -alh'
alias dush='du -sh -- *'
alias lsdir='ls -aldh */'

# Disks.
alias mount-ubuntu='sudo mount ${UBUNTU_DISK_PARTITION} /mnt-ubuntu && cd /mnt-ubuntu'
alias unmount-ubuntu='cd ~ && sudo umount ${UBUNTU_DISK_PARTITION}'
alias mount-usb='sudo mount /dev/sda1 ~/Downloads/mnt'
alias umount-usb='sudo umount /dev/sda1'
alias dfl="df -h --output=source,used,size,target | grep ^'/dev/' | grep -v '/boot/' | awk 'BEGIN { OFS=\"\t\" } {print \$1, FS, \$2 \" / \" \$3}'"
alias mnt="cd ~/Downloads/mnt/"

# Git.
alias log='git log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short --reverse'
alias diff='git diff'
alias repos='mgitstatus -c --no-upstream ~/Documents'
alias status='git status'

# Media Controller.
alias song='playerctl metadata --format "Now playing: {{ artist }} - {{ album }} - {{ title }}"'
alias next='playerctl next && sleep 1 && song'
alias previous='playerctl previous && sleep 1 && song'
alias pause='playerctl pause'
alias unpause='playerctl play'
alias slideshow='feh --scale-down -xzrZD'
alias background='feh --bg-fill'

# Information.
alias ip='curl icanhazip.com'
alias distro='cat /etc/*-release'

# Packages.
alias pac='sudo pacman'
alias apt='sudo apt'
alias pip='sudo pip'

# Picture editing.
alias montage-row-auto='montage-row "*.png" "cover.png"'
alias montage-quad-auto='montage-quad "*.png" "cover.png"'

# Random.
alias lenny='echo "\_(ツ)_/¯" | pbcopy && pbpaste'
alias fire='aafire -driver curses'
alias symbols='cat ${CONFIG_PATH}/docs/symbols'
alias editsymbols='vim ${CONFIG_PATH}/docs/symbols'

# Redshift.
alias night='redshift -O 4250 &> /dev/null'
alias day='redshift -x &> /dev/null'

# Security.
alias password='openssl rand -base64 20'
alias sha='shasum -a 256'
alias clear-history-bash='cat /dev/null > ~/.bash_history && history -c && exit'
alias clear-history-zsh='cat /dev/null > ~/.zsh_history && history -c && exit'
alias other-open='encfs ${FOLDER_HIDDEN} ${FOLDER_SHOWN}'
alias other-close='fusermount -u ${FOLDER_SHOWN}'
alias purge='clear && clear-history-zsh'

# Shortcuts (Config).
alias config='cd ${CONFIG_PATH}'
alias commands='vim ${CONFIG_PATH}/docs/commands'
alias keybinds='cat ${CONFIG_PATH}/docs/keybinds'
alias aliases='vim ${CONFIG_PATH}/aliases/global && source ~/.zshrc'
alias startup='vim ${CONFIG_PATH}/startup.py'
alias todo='vim ~/Documents/todo'
alias zshrc='vim ~/.zshrc && source ~/.zshrc'
alias command-search='cat ${CONFIG_PATH}/docs/commandList | grep'
alias goals='vim ~/Documents/goals'

# Shortcuts (Directories).
alias docs='cd ~/Documents'
alias desk='cd ~/Desktop'
alias pics='cd ~/Pictures'
alias vids='cd ~/Videos'
alias home='clear && cd ~/Documents'
alias dl='cd ~/Downloads'
alias torrents='cd ~/Downloads/torrents/'

# Shutdown.
alias shutdown='shutdown -h now'
alias restart='shutdown -r now'

# Statistics.
alias count-files='find . -type f | wc -l'
alias find-dupes='find . -type f -exec md5sum "{}" ";" | sort | uniq --all-repeated=separate -w 15 > dupes.txt'

# Templates.
alias template-scala='cp -i ${CONFIG_PATH}/templates/scala.scala'

# Terminal.
alias l='ls -Alh --color=auto'
alias ll='ls -Alh --color=auto'
alias ls='ls --color=auto'
alias la='ls -Alh --color=auto'
alias grep='grep --color=auto'
alias h='history'
alias hs='history | grep'
alias c='clear'
alias neofetch='neofetch --source ${CONFIG_PATH}/media/goose.txt'
alias v='vim'
alias urxvt-config='vim ${CONFIG_PATH}/.Xresources && xrdb ${CONFIG_PATH}/.Xresources'

# Downloads.
alias yt-audio='youtube-dl -x -f bestaudio --no-playlist'
alias yt-metadata='youtube-dl -qse --get-title --get-duration --get-description --no-playlist'
alias yt-external='youtube-dl --external-downloader axel --external-downloader-args "-n 10 -a"'
alias yt-video='youtube-dl -f best --no-playlist'

# Videos.
alias res='ffprobe -v error -select_streams v:0 -show_entries stream=width,height -of csv=s=x:p=0'

# Web (Uses default browser).
alias google='xdg-open google.co.uk &'
alias youtube='xdg-open youtube.co.uk &'
alias github='xdg-open github.com &'
alias amazon='xdg-open amazom.co.uk &'
alias netflix='xdg-open netflix.co.uk &'
alias gslides='xdg-open https://docs.google.com/presentation/u/0/ &'
alias gsheets='xdg-open https://docs.google.com/spreadsheets/u/0/ &'
alias gdocs='xdg-open https://docs.google.com/document/u/0/ &'

# DON'T FORGET TO RELOAD. Config should automatically reload when this file is closed.
alias reload='clear && source ~/.zshrc'

# ----------------------------------------------------------------------------------------------- #

# Git - Adds untracked files, pushes and commits them.
upload() {
  branchName=$(git branch --show-current)
  git add . && git commit -m $1 && git push origin $branchName
}

# Locks the screen according to the Linux distribution.
lock() {
  if [ $DISTRO_ID = 'Ubuntu' ]; then
    gnome-screensaver-command -l
  elif [ $DISTRO_ID = 'ManjaroLinux' ]; then
    blurlock
  else
    echo "==> No lock command for distribution"
  fi
}

# Encrypts a file using GPG.
gpg-encrypt() {
  newFile="$1.gpg"
  gpg --output $newFile --encrypt --recipient $GPG_EMAIL $1
  echo "File encrypted at: $(pwd)/$newFile"
}

# Decrypts a GPG file.
gpg-decrypt() {
  oldFile="$1.gpg"
  gpg --output $1 --decrypt $oldFile
  echo "==> File decrypted at $(pwd)/$1"
}

# Purge all VLC processes.
vlc-purge() {
  for i in $(ps -e | grep vlc | sed "s/^[ \t]*//" | cut -d ' ' -f 1)
  do
    kill -9 $i
    echo "==> Killed process ${i}"
    vlc-purge()
    return 0
  done
}

# Batch rename all files in a directory.
batch-rename() {
  if [ $# -eq 1 ]; then
    ls -1p | grep -v "/$" | cat -n | while read n f; do mv -ni "${f}" "$(printf "%s - %03d" $1 $n).${f#*.}"; done 
  elif [ $# -eq 2 ]; then
    ls -1p | grep -v "/$" | grep ^"$1" | cat -n | while read n f; do mv -ni "${f}" "$(printf "%s - %03d" $2 $n).${f#*.}"; done
  fi
}

# Get resolution of image file.
resolution() {
  if [[ $1 == *.png || $1 == *.jpg ]]; then
    identify $1 | grep -o "[[:digit:]]*x[[:digit:]]*" | head -1
  else
    echo "Invalid file format. Only .png and .jpg formats allowed."
  fi
}

# Crops multiple images.
batch-crop-mid() {
  for f in *.png; do
    crop-mid "$f"
  done
}

# Crops an image into the middle horizontal third.
crop-mid() {
  res=$(resolution $1 | tr "x" "\n")
  width=$(echo "$res" | head -1)
  height=$(echo "$res" | tail -1)
  newWidth=$(expr $width / 3)
  convert $1 -crop "${newWidth}x${height}+${newWidth}+0" "cropped-$1"
}

# Montage collection of images into a single row.
montage-row() {
  montage -tile x1 -frame 0 -border 0 -geometry "-0+0" "$1" "$2"
}

# Montage collection of images into a 2x2 grid.
montage-quad() {
  montage -tile 2x2 -frame 0 -border 0 -geometry "-0+0" "$1" "$2"
}

# Sets the thumbnail of the video.
set-thumbnail() {
  ffmpeg -i "$1" -i "$2" -map 1 -map 0 -acodec copy -vcodec copy "tmp-thumbnail-video.mp4"
  mv -i "$1" "old-$1"
  mv -i "tmp-thumbnail-video.mp4" "$1"
}

# Cut videos with ffmpeg.
ffmpeg-cut() {
  ffmpeg -i "$1" -ss "$2" -to "$3" -c copy -avoid_negative_ts make_zero "$4"
}
